{"version":3,"sources":["components/ContactForm.js","firebase.js","components/Contacts.js","App.js","reportWebVitals.js","index.js"],"names":["ContactForm","props","initialFieldValues","fullName","mobile","email","address","useState","values","setValues","useEffect","currentId","contactObjects","handleInputChange","e","target","name","value","autoComplete","onSubmit","preventDefault","addOrEdit","className","placeholder","onChange","pattern","required","type","id","fireDb","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","ref","Contacts","setCurrentId","setContactObjects","firebaseDb","child","on","snapshot","val","obj","push","err","console","log","set","Object","keys","map","key","onClick","window","confirm","remove","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62fe0e9d.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst ContactForm = (props) => {\r\n  const initialFieldValues = {\r\n    fullName: \"\",\r\n    mobile: \"\",\r\n    email: \"\",\r\n    address: \"\",\r\n  };\r\n\r\n  var [values, setValues] = useState(initialFieldValues);\r\n\r\n  useEffect(() => {\r\n    if (props.currentId === \"\") setValues({ ...initialFieldValues });\r\n    else\r\n      setValues({\r\n        ...props.contactObjects[props.currentId],\r\n      });\r\n  }, [props.currentId, props.contactObjects]);\r\n\r\n  const handleInputChange = (e) => {\r\n    var { name, value } = e.target;\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.addOrEdit(values);\r\n  };\r\n\r\n  return (\r\n    <form autoComplete=\"off\" onSubmit={handleFormSubmit}>\r\n      <div className=\"form-group input-group\">\r\n        <div className=\"input-group-prepend\">\r\n          <div className=\"input-group-text\">\r\n            <i className=\"fas fa-user\"></i>\r\n          </div>\r\n        </div>\r\n        <input\r\n          className=\"form-control\"\r\n          name=\"fullName\"\r\n          placeholder=\"Full Name\"\r\n          value={values.fullName}\r\n          onChange={handleInputChange}\r\n          pattern=\"[a-zA-Z ]+\"\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group input-group col-md-6\">\r\n          <div className=\"input-group-prepend\">\r\n            <div className=\"input-group-text\">\r\n              <i className=\"fas fa-mobile-alt\"></i>\r\n            </div>\r\n          </div>\r\n\r\n          <input\r\n            className=\"form-control\"\r\n            name=\"mobile\"\r\n            placeholder=\"Mobile\"\r\n            value={values.mobile}\r\n            onChange={handleInputChange}\r\n            pattern=\"[0-9]{10}\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group input-group col-md-6\">\r\n          <div className=\"input-group-prepend\">\r\n            <div className=\"input-group-text\">\r\n              <i className=\"fas fa-envelope\"></i>\r\n            </div>\r\n          </div>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            id=\"email\"\r\n            placeholder=\"Email\"\r\n            value={values.email}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <textarea\r\n          className=\"form-control\"\r\n          name=\"address\"\r\n          placeholder=\"Address\"\r\n          value={values.address}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <input\r\n          type=\"submit\"\r\n          value={props.currentId === \"\" ? \"Save\" : \"Update\"}\r\n          className=\"btn btn-primary btn-block btn-outline-success\"\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyDriHyeoN014TqWyELPp7VtjxMv00Z0T4I\",\r\n  authDomain: \"react-crud-c375d.firebaseapp.com\",\r\n  databaseURL: \"https://react-crud-c375d.firebaseio.com\",\r\n  projectId: \"react-crud-c375d\",\r\n  storageBucket: \"react-crud-c375d.appspot.com\",\r\n  messagingSenderId: \"104082329567\",\r\n  appId: \"1:104082329567:web:dadb7cea2f65af4fb83e6a\",\r\n};\r\n// Initialize Firebase\r\nvar fireDb = firebase.initializeApp(firebaseConfig);\r\n\r\nexport default fireDb.database().ref();\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ContactForm from \"./ContactForm\";\r\nimport firebaseDb from \"../firebase\";\r\n\r\nconst Contacts = () => {\r\n  var [currentId, setCurrentId] = useState(\"\");\r\n  var [contactObjects, setContactObjects] = useState({});\r\n\r\n  //Once components load complete\r\n  useEffect(() => {\r\n    firebaseDb.child(\"contacts\").on(\"value\", (snapshot) => {\r\n      if (snapshot.val() != null) {\r\n        setContactObjects({\r\n          ...snapshot.val(),\r\n        });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const addOrEdit = (obj) => {\r\n    if (currentId == \"\")\r\n      firebaseDb.child(\"contacts\").push(obj, (err) => {\r\n        if (err) console.log(err);\r\n        else setCurrentId(\"\");\r\n      });\r\n    else\r\n      firebaseDb.child(`contacts/${currentId}`).set(obj, (err) => {\r\n        if (err) console.log(err);\r\n        else setCurrentId(\"\");\r\n      });\r\n  };\r\n\r\n  const onDelete = (id) => {\r\n    if (window.confirm(\"Are you sure to delete this record?\")) {\r\n      firebaseDb.child(`contacts/${id}`).remove((err) => {\r\n        if (err) console.log(err);\r\n        else setCurrentId(\"\");\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"jumbotron jumbotron-fluid\">\r\n        <div className=\"container\">\r\n          <h1 className=\"display-4 text-center\">Contact Manager</h1>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-5\">\r\n          <ContactForm\r\n            {...{ currentId, contactObjects, addOrEdit }}\r\n          ></ContactForm>\r\n        </div>\r\n        <div className=\"col-md-7\">\r\n          <table className=\"table table-borderless table-stripped\">\r\n            <thead className=\"thead-light\">\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Mobile</th>\r\n                <th>Email</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {Object.keys(contactObjects).map((key) => (\r\n                <tr key={key}>\r\n                  <td>{contactObjects[key].fullName}</td>\r\n                  <td>{contactObjects[key].mobile}</td>\r\n                  <td>{contactObjects[key].email}</td>\r\n                  <td className=\"bg-light\">\r\n                    <a\r\n                      className=\"btn text-primary\"\r\n                      onClick={() => {\r\n                        setCurrentId(key);\r\n                      }}\r\n                    >\r\n                      <i className=\"fas fa-pencil-alt\"></i>\r\n                    </a>\r\n                    <a\r\n                      className=\"btn text-danger\"\r\n                      onClick={() => {\r\n                        onDelete(key);\r\n                      }}\r\n                    >\r\n                      <i className=\"far fa-trash-alt\"></i>\r\n                    </a>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","import \"./App.css\";\nimport Contacts from \"./components/Contacts\";\n\nfunction App() {\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-8 offset-md-2\">\n        <Contacts />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}